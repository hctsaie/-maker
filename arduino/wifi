
以Arduino Meage 2560及ESP8266 - ESP01的Wifi晶片做範例. 但, USB to TTL (Serial)的晶片是用CP2102. 而我們用的是PL-2303HX. 
USB to TTL的目的是希望透過電腦來檢測Wifi晶片的版軟體版本及功能. 因, 該wifi晶本身沒有USB接口, 只有Serial接腳, 所以, 需要自己找轉換器. 市售外接Wifi裝置, 為了是讓電腦可以或wifit功能. 因此, 都是以USB為接口. 不過, 在一切都無狀況下, 其實可以不用USB TTL這個步驟, 而是直接讓Arduino和Wifi通訊. 但, 為免因為不知Wifi裝置的版本及每秒傳輸率(Baud Rate), 而造成在Arduino上不知如何設定和Wifi裝置的通訊設定, 或者是為了檢測該Wifi裝置有無問題. 所以, 仍會有此一步驟.

而, 為了讓電腦認得USB to TTL, 又需要在電腦上安裝USB to TTL這個裝置本身的驅動程式. Windows原先的PL-2303HX驅動程式,對某些PL-2303HX裝置無法啟動, 有可能是因為版本問題, 也有可能是因為該晶片為副廠裝做, 而當電腦是較新的軟體時, 該軟體認為該裝置晶片為副廠, 而不support. 因此, 需要原先在電腦上的驅動程式移除. 找到舊版的程式, 重新安裝.

USB to Serial有多種晶片, 如, CP2102, FDTI, PL-2303HX
Wifi晶片以ESP8266比較熱門, 其中又以ESP8266 ESP01 or ESP03為大宗

穩壓器很重要, 獨立電源供電, 以免一些零件因電流不足而失常. 重點是電流要足.
函式庫放到Arduino安裝資料夾內的libraries內

Wifi晶片不能接5v. 而, USB to TTL的VCC為5V.

Serial是對電腦 or Arduino
Serial1是對Mega的TX1 and RX1
Serial1是在Arduino code內, 用來和在Serial 1的Wifi晶片溝通
在電腦上用COM Monitor透過Searial去和Arduino作溝通, 再將字串內容透過Serial1給Wifi晶片.

用Arduino UNO時, 因為它的Serial Port只有一組, 那一組也用來從電腦download code到Arduino, 所以, 無法同時運作.
因此, 可以透過SoftwareSerial的方式, 來將一些訊號針腳(pin)轉為用軟體模擬的方式來作TX/RX. 此時, Wifi的TX/RX即可接到該訊號針腳, 以和Arduino溝通. 
在Arduino Mega則有組HardwareSerial, 相關晶片接腳為Serial來傳送訊息的, 則直接使用HardwareSerial.

https://www.arduino.cc/en/Reference/SoftwareSerial
The Arduino hardware has built-in support for serial communication on pins 0 and 1 (which also goes to the computer via the USB connection). The native serial support happens via a piece of hardware (built into the chip) called a UART.
The SoftwareSerial library has been developed to allow serial communication on other digital pins of the Arduino, using software to replicate the functionality (hence the name "SoftwareSerial"). It is possible to have multiple software serial ports with speeds up to 115200 bps. A parameter enables inverted signaling for devices which require that protocol.
 -If using multiple software serial ports, only one can receive data at a time.
 -Not all pins on the Mega and Mega 2560 support change interrupts, so only the following can be used for RX: 10, 11, 12, 13, 14, 15, 50, 51, 52, 53, A8 (62), A9 (63), A10 (64), A11 (65), A12 (66), A13 (67), A14 (68), A15 (69).
 -On Arduino or Genuino 101 the current maximum RX speed is 57600bps
 -On Arduino or Genuino 101 RX doesn't work on Pin 13
 -If your project requires simultaneous data flows, see Paul Stoffregen's AltSoftSerial library.

http://lets-make-games.blogspot.tw/2015/04/wifi-esp8266-wifi.html
http://lets-make-games.blogspot.tw/2015/05/wifi-esp8266-arduino.html


http://forum.arduino.cc/index.php?topic=457067.0
https://forum.arduino.cc/index.php?topic=484479.0
http://atceiling.blogspot.tw/2013/03/arduino-arduino.html

https://stackoverflow.com/questions/3663668/how-to-compare-pointer-to-strings-in-c
https://stackoverflow.com/questions/1070882/c-string-compare
https://stackoverflow.com/questions/1330550/c-compare-char-array-with-string
https://stackoverflow.com/questions/7125697/c-comparing-pointers-with-chars

穩壓器的作用? 電壓維持在一定水準, 但, 電池逐漸沒電有用嗎? 另外, 電流不夠有用嗎? 如何知道?

https://create.arduino.cc/projecthub/user16726/configuring-the-esp8266-using-an-arduino-0ab2e6

http://randomnerdtutorials.com/how-to-install-esp8266-board-arduino-ide/
http://randomnerdtutorials.com/getting-started-with-esp8266-wifi-transceiver-review/
http://randomnerdtutorials.com/fingerprint-sensor-module-with-arduino/


將溫度資料, 透過Arduino及Wifi晶片上傳到ThingSpeak網站. 
看來該範例是用Arduino UNO, 該板子只有一組Hardware Serial Port, 也是就COM Port (序列埠, 用來讓電腦傳程式給Arduino). 所以, 用SoftwareSerial (用Arduino上原有訊號孔, 以軟體方式來模擬TX/RX硬體的Serial Port). 不過, 程式內還是將ESP8266接在RX0/TX0也就是Serial0的Port, 原則上, 如有要再上傳程式, 還是會衝, 需先將ESP8266在RX0/TX0的接腳移掉. 而這個程式是把USB to TTL接在SoftwareSerial Port, 它是用來讓Arduino程式傳一些訊息到電腦的監控程式, 以監控ESP8266的運作. 但, 要傳遞的內容, 也是自己在程式內指定.
http://ruten-proteus.blogspot.tw/2014/11/internet-of-thing-arduino-esp8266.html

用PCB電路板來將USB to TTL, Wifi晶片等等, 組成一個裝置, 可以直接插在電腦上使用.
http://www.instructables.com/id/Makers-IoT-Kit-for-ESP8266-ESP-01/


http://lets-make-games.blogspot.tw/2015/05/wifi-esp8266-arduino.html
因為 Uno只有一組 RX/TX通訊連接孔，而這組 RX/TX其實是與它的 USB連接阜接在一起。當我們把 USB線插上電腦，就等於是使用了這組 RX/TX 在和電腦通訊(是的，Arduino內建USB轉 Serial轉換器，所以接USB就可以直接跟 RX/TX通訊)。這也表示，它同時只能跟 電腦和 ESP8266 其中一個通訊。如果接了 ESP8266 那就無法跟電腦通訊了。

但 Mega 則有多組(0號~3號共四組)的 RX/TX通訊連接孔，因此我們就可以使用兩組 RX/TX，同時和電腦及 ESP8266 通訊。這會讓我們之後的實驗更容易。

Arduino Mega 的 RX0/TX0 就和 Uno一樣，已經跟它的 USB連接阜連接。所以如果你使用的是 Mega，請改接到它的 RX1/ TX1(孔19、18)。

除了通訊的配線之外，我們也要處理電源的配線。我高度建議不要使用 Arduino的 3.3v孔當作電源供應 ESP8266。因為，這就是我會辛苦搏鬥+鬼打牆的 80%原因！


ESP8266 對於電源供應真的非常龜毛。電壓太低或太高，或供應的電流不足，都會讓它秀逗。如果能夠提供穩定的 3.3v電源和充足的電流(至少要200mA~300mA以上)，你才會有機會跟它相處愉快。不然無預警、不明原因的斷線、重新開機等症頭，將會如影隨形......

Arduino 的電源供應並不穩定。電流可能也不夠。而如果  ESP8266又是和 Arduino，甚至小車的馬達，共用同一組電池，那麼電壓和電流就很容易隨著其他部份的電力消耗而波動，變得很不穩定。於是 ESP8266就會開始當機、吐出亂碼，甚至重新啟動。

我使用的是下面這一款電源模組，它需要 6.5~12V電源輸入(很適合兩顆 18650電池)，並提供了穩定的 3.3V電源輸出。裝上後，ESP8266 的很多問題就消失了。要把電池與電源模組連接，可以去購買 2.1mm的 DC接頭來插。另外我也有找到另一款電源輸入只需要 4.5~7V的電源模組(適合兩顆3號電池)。


http://stanley2910.pixnet.net/blog/post/126049610-esp8266%E7%9A%84%E5%A4%96%E9%83%A8%E9%9B%BB%E6%BA%90%E8%88%87%E7%B7%9A%E8%B7%AF%E5%95%8F%E9%A1%8C
問題(1):使用Arduino Uno版的3.3V輸出電源是否可以當做ESP8266的外部電源？

    根據Arduino Uno的官方技術規格書中寫到3.3V的輸出電源只能提供50mA 的電流（DC Current for 3.3V Pin 50 mA），但是ESP8266的平常耗電量可能要0~100mA，因此感覺上這種的供電方式似乎是不太足夠的。
    
問題(3): USB to Serial 晶片的TX接脚是否可以直接連接到ESP8266模組的RX接脚 ?

    根據FT2303 IC 內的技術規格書中的通訊接脚TX輸出是3.3V ，因此此脚直接連接到直接連接到ESP8266模組的RX接脚是没有問題的。但是如我們是使用Arduino來傳資料，將Arduino的TX(傳送資料)接脚直接連接到ESP8266的RX(接收資料)接脚，但Arduino 的TX接脚輸出壓為5V，但ESP8266的RX接脚為3.3V的輸入電壓，所以如用上圖的而Arduino TX0接ESP8266 RX可能會有燒毀ESP8266的可能性，因此建議使用二個電阻(1K及2K或10K及 20K)分壓，使5.5V的輸出電壓變成3.3V的電壓。而Arduino RX與ESP8266 TX不需要分壓電路，因為當TX為High電位(3.3V)時， Arduino的RX能偵測到這是高電位，所以不需要分壓電路 
